// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ImageColorPicker /> should render properly 1`] = `
<WebView
  javaScriptEnabled={true}
  onMessage={[Function]}
  source={
    Object {
      "html": "
            <!DOCTYPE html>
            <html>
            <script>
            function fetchColorFromCanvas(){
              var rgb = getAverageRGB(document.getElementById(\\"canvasImage\\"));
              var message = {\\"message\\":'rgbValues',\\"payload\\":rgb};
              window.postMessage(JSON.stringify(message));
            }
            function getAverageRGB(imgEl) {
              var blockSize = 5;
              var defaultRGB = {r:0,g:0,b:0};
              var canvas = document.createElement(\\"canvas\\");
              var context = canvas.getContext && canvas.getContext(\\"2d\\");
              var data, width, height;
              var i = -4;
              var length;
              var rgb = {r:0,g:0,b:0};
              var count = 0;
              if (context == undefined || context == null) {
                  return defaultRGB;
              }
              height = canvas.height = imgEl.naturalHeight || imgEl.offsetHeight || imgEl.height;
              width = canvas.width = imgEl.naturalWidth || imgEl.offsetWidth || imgEl.width;
              context.drawImage(imgEl, 0, 0);
              try {
                  data = context.getImageData(width/3, width/3 + 10, width/3, width/3 + 10);
              } catch(e) {
                  return defaultRGB;
              }
              length = data.data.length;  
              while ( (i += blockSize * 4) < length ) {
                  ++count;
                  rgb.r += data.data[i];
                  rgb.g += data.data[i+1];
                  rgb.b += data.data[i+2];              
              }
              rgb.r = ~~(rgb.r/count);
              rgb.g = ~~(rgb.g/count);
              rgb.b = ~~(rgb.b/count);
              return rgb;
            }
            const interval = setInterval(function() {
              var img = document.getElementById('canvasImage');
              if(img.src.length != 0) {
                fetchColorFromCanvas();
                clearInterval(interval);
              }
            },10);
            </script>
            <body style='position: absolute; bottom: -1000px;'>
              <img src='data:image/jpeg;base64,' id='canvasImage' onload='fetchColorFromCanvas()'/>
            </body>
            </html>",
    }
  }
  style={
    Object {
      "position": "absolute",
      "right": -1000,
    }
  }
/>
`;
