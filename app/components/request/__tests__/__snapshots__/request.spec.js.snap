// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Request /> should match snapshot 1`] = `
<View
  accessibilityLabel="request-container"
  accessible={true}
  style={
    Object {
      "flex": 1,
    }
  }
  testID="request-container"
>
  <View
    fifth={true}
    style={
      Object {
        "backgroundColor": "#ffffff",
        "flex": 1,
      }
    }
  >
    <View
      accessibilityLabel="request-text-container"
      accessible={true}
      hCenter={true}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
        }
      }
      testID="request-text-container"
      useNativeDriver={true}
    >
      <View
        accessibilityLabel="request-text-message-container"
        accessible={true}
        style={
          Object {
            "flex": 1,
            "justifyContent": "flex-end",
          }
        }
        testID="request-text-message-container"
      >
        <Animatable.View
          accessibilityLabel="request-text-container-animation"
          accessible={true}
          animation="bounceInDown"
          delay={100}
          duration={1500}
          testID="request-text-container-animation"
        >
          <View
            accessibilityLabel="request-text-container-message-title"
            accessible={true}
            center={true}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              }
            }
            testID="request-text-container-message-title"
          >
            <Text
              accessibilityLabel="Hi Test User"
              accessible={true}
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "fontSize": 20,
                  },
                  Object {
                    "fontFamily": "Lato",
                  },
                  Object {
                    "backgroundColor": "#ffffff",
                    "color": "#777777",
                  },
                  Object {
                    "fontWeight": "800",
                  },
                  Object {
                    "textAlign": "center",
                  },
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  Object {
                    "lineHeight": 30,
                    "marginHorizontal": 30,
                    "marginVertical": 10,
                  },
                ]
              }
              testID="request-text-container-title"
            >
              Hi Test User
            </Text>
            <Text
              accessibilityLabel="Enterprise A agent wants to connect with you"
              accessible={true}
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "fontSize": 17,
                  },
                  Object {
                    "fontFamily": "Lato",
                  },
                  Object {
                    "backgroundColor": "#ffffff",
                    "color": "#777777",
                  },
                  Object {
                    "fontWeight": "bold",
                  },
                  Object {
                    "textAlign": "center",
                  },
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  Object {
                    "margin": 10,
                  },
                ]
              }
              testID="request-text-container-message"
            >
              Enterprise A agent wants to connect with you
            </Text>
          </View>
        </Animatable.View>
      </View>
      <View
        accessibilityLabel="request-text-container-avatars"
        accessible={true}
        style={
          Object {
            "flex": 1,
          }
        }
        testID="request-text-container-avatars"
      >
        <Animatable.View
          accessibilityLabel="invitation-text-container-avatars-animation"
          accessible={true}
          animation="bounceInUp"
          delay={300}
          duration={1500}
          testID="invitation-text-container-avatars-animation"
        >
          <View
            center={true}
            spaceBetween={true}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityLabel="invitation-text-avatars-container"
              accessible={true}
              row={true}
              spaceBetween={true}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "marginVertical": 40,
                }
              }
              testID="invitation-text-avatars-container"
              vCenter={true}
            >
              <View
                accessible={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
              >
                <View
                  accessibilityLabel="invitation-text-avatars-invitee"
                  accessible={true}
                  imageShadow="imageShadow"
                  style={
                    Object {
                      "borderRadius": 38,
                      "elevation": 3,
                      "shadowColor": "rgba(0, 0, 0, 0.25)",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 1,
                      "shadowRadius": 8,
                    }
                  }
                  testID="invitation-text-avatars-invitee"
                >
                  <Image
                    accessible={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    source={
                      Object {
                        "uri": "/var/application/DocumentDir/user-avatar.jpeg",
                      }
                    }
                    style={
                      Array [
                        Object {
                          "height": 76,
                          "width": 76,
                        },
                        Object {
                          "borderRadius": 38,
                        },
                      ]
                    }
                  />
                </View>
              </View>
              <Image
                source={1}
                style={
                  Object {
                    "height": 8,
                    "marginHorizontal": 5,
                    "width": 60,
                  }
                }
              />
              <View
                accessibilityLabel="invitation-text-avatars-inviter"
                accessible={true}
                imageShadow="imageShadow"
                style={
                  Object {
                    "borderRadius": 38,
                    "elevation": 3,
                    "shadowColor": "rgba(0, 0, 0, 0.25)",
                    "shadowOffset": Object {
                      "height": 3,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 8,
                  }
                }
                testID="invitation-text-avatars-inviter"
              >
                <Image
                  accessible={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  source={
                    Object {
                      "uri": "https://image.url",
                    }
                  }
                  style={
                    Array [
                      Object {
                        "height": 76,
                        "width": 76,
                      },
                      Object {
                        "borderRadius": 38,
                      },
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </Animatable.View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "rgba(119, 119, 119, 1.0)",
      }
    }
  >
    <View
      fifth={true}
      style={
        Object {
          "backgroundColor": "#ffffff",
        }
      }
    >
      <View
        style={Object {}}
      >
        <View
          customColor={
            Object {
              "backgroundColor": "rgba(119, 119, 119, 1.0)",
            }
          }
          row={true}
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={Object {}}
            >
              <View
                style={
                  Array [
                    Object {
                      "marginLeft": 15,
                      "marginRight": 15,
                    },
                    undefined,
                    Object {
                      "marginLeft": 0,
                      "marginRight": 0,
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessibilityLabel="request-deny"
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={null}
                  testID="request-deny"
                >
                  <View
                    pointerEvents="box-only"
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#9E9E9E",
                          "flexDirection": "row",
                          "justifyContent": "center",
                          "padding": 19,
                        },
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        Object {
                          "backgroundColor": "rgba(119, 119, 119, 1.0)",
                        },
                        undefined,
                        Object {
                          "padding": 12,
                        },
                        undefined,
                        undefined,
                        undefined,
                        Array [
                          Object {
                            "paddingVertical": 17,
                          },
                        ],
                        false,
                        false,
                      ]
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {},
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          Array [
                            Object {
                              "color": "white",
                              "fontSize": 16,
                            },
                            Object {
                              "color": "#ffffff",
                            },
                            Object {
                              "fontSize": 14,
                            },
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            false,
                          ],
                        ]
                      }
                    >
                      Deny
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={Object {}}
            >
              <View
                style={
                  Array [
                    Object {
                      "marginLeft": 15,
                      "marginRight": 15,
                    },
                    undefined,
                    Object {
                      "marginLeft": 0,
                      "marginRight": 0,
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessibilityLabel="request-accept"
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "borderLeftColor": "#ffffff",
                        "borderLeftWidth": 0.4,
                      },
                    ]
                  }
                  testID="request-accept"
                >
                  <View
                    pointerEvents="box-only"
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#9E9E9E",
                          "flexDirection": "row",
                          "justifyContent": "center",
                          "padding": 19,
                        },
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        Object {
                          "backgroundColor": "rgba(119, 119, 119, 1.0)",
                        },
                        undefined,
                        Object {
                          "padding": 12,
                        },
                        undefined,
                        undefined,
                        undefined,
                        Array [
                          Object {
                            "paddingVertical": 17,
                          },
                          Object {
                            "borderLeftColor": "#ffffff",
                            "borderLeftWidth": 0.4,
                          },
                        ],
                        false,
                        false,
                      ]
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {},
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          Array [
                            Object {
                              "color": "white",
                              "fontSize": 16,
                            },
                            Object {
                              "color": "#ffffff",
                            },
                            Object {
                              "fontSize": 14,
                            },
                            undefined,
                            undefined,
                            Object {
                              "fontWeight": "bold",
                            },
                            undefined,
                            false,
                          ],
                        ]
                      }
                    >
                      Connect
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;
