// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Request /> should match snapshot 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    fifth={true}
    style={
      Object {
        "backgroundColor": "#ffffff",
        "flex": 1,
      }
    }
  >
    <View
      hCenter={true}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
        }
      }
      testID="invitation-text-container"
      useNativeDriver={true}
    >
      <View
        bottom={true}
        style={
          Object {
            "flex": 1,
            "justifyContent": "flex-end",
          }
        }
        testID="invitation-text-message-container"
      >
        <Animatable.View
          animation="bounceInDown"
          delay={100}
          duration={1500}
          testID="invitation-text-container-animation"
        >
          <View
            center={true}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              }
            }
            testID="invitation-text-container-message-title"
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              onPress={[Function]}
              style={
                Array [
                  Object {
                    "fontSize": 20,
                  },
                  Object {
                    "backgroundColor": "#ffffff",
                    "color": "#777777",
                  },
                  Object {
                    "fontWeight": "900",
                  },
                  Object {
                    "textAlign": "center",
                  },
                  null,
                  Object {
                    "marginVertical": 10,
                  },
                ]
              }
              testID="invitation-text-container-title"
            >
              Hi Test User
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              onPress={undefined}
              style={
                Array [
                  Object {
                    "fontSize": 17,
                  },
                  Object {
                    "backgroundColor": "#ffffff",
                    "color": "#777777",
                  },
                  Object {
                    "fontWeight": "bold",
                  },
                  Object {
                    "textAlign": "center",
                  },
                  null,
                  Object {
                    "marginVertical": 10,
                  },
                ]
              }
              testID="invitation-text-container-message"
            >
              Enterprise A agent wants to connect with you
            </Text>
          </View>
        </Animatable.View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
        testID="invitation-text-container-avatars"
      >
        <Animatable.View
          animation="bounceInUp"
          delay={300}
          duration={1500}
          testID="invitation-text-container-avatars-animation"
        >
          <View
            hCenter={true}
            spaceBetween={true}
            style={
              Object {
                "justifyContent": "space-between",
              }
            }
          >
            <View
              row={true}
              spaceBetween={true}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "margin": 50,
                }
              }
              testID="invitation-text-avatars-container"
              vCenter={true}
            >
              <View
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 38,
                    "shadowColor": "rgba(0, 0, 0, 0.25)",
                    "shadowOffset": Object {
                      "height": 5,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 7,
                  }
                }
                testID="invitation-text-avatars-invitee"
              >
                <Image
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  hitSlop={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  source={1}
                  style={
                    Array [
                      Object {
                        "height": 76,
                        "width": 76,
                      },
                      Object {
                        "borderRadius": 38,
                      },
                    ]
                  }
                  testID={undefined}
                />
              </View>
              <Image
                source={1}
                style={
                  Object {
                    "height": 8,
                    "width": 60,
                  }
                }
              />
              <View
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 38,
                    "shadowColor": "rgba(0, 0, 0, 0.25)",
                    "shadowOffset": Object {
                      "height": 5,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 7,
                  }
                }
                testID="invitation-text-avatars-inviter"
              >
                <Image
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  hitSlop={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  source={
                    Object {
                      "uri": "https://image.url",
                    }
                  }
                  style={
                    Array [
                      Object {
                        "height": 76,
                        "width": 76,
                      },
                      Object {
                        "borderRadius": 38,
                      },
                    ]
                  }
                  testID={undefined}
                />
              </View>
            </View>
          </View>
        </Animatable.View>
      </View>
    </View>
  </View>
  <View>
    <View
      row={true}
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              undefined,
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#9E9E9E",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginLeft": 15,
                  "marginRight": 15,
                  "padding": 19,
                },
                Object {
                  "backgroundColor": "#8F0CE8",
                },
                undefined,
                undefined,
                undefined,
                undefined,
                Object {
                  "backgroundColor": "#f79347",
                },
                undefined,
                Object {
                  "shadowColor": "rgba(0,0,0, .4)",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 1,
                  },
                  "shadowOpacity": 1,
                  "shadowRadius": 1,
                },
                Object {
                  "padding": 12,
                },
                Array [
                  Object {
                    "marginLeft": 0,
                    "marginRight": 0,
                  },
                  Object {
                    "paddingVertical": 15,
                  },
                ],
                undefined,
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "white",
                      "fontSize": 16,
                    },
                    Object {
                      "color": "#ffffff",
                    },
                    Object {
                      "fontSize": 14,
                    },
                    Object {
                      "fontSize": 17,
                    },
                    undefined,
                    Object {
                      "fontWeight": "600",
                    },
                    undefined,
                  ],
                ]
              }
            >
              Deny
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              undefined,
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#9E9E9E",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginLeft": 15,
                  "marginRight": 15,
                  "padding": 19,
                },
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Object {
                  "backgroundColor": "#F68127",
                },
                undefined,
                Object {
                  "shadowColor": "rgba(0,0,0, .4)",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 1,
                  },
                  "shadowOpacity": 1,
                  "shadowRadius": 1,
                },
                Object {
                  "padding": 12,
                },
                Array [
                  Object {
                    "marginLeft": 0,
                    "marginRight": 0,
                  },
                  Object {
                    "paddingVertical": 15,
                  },
                ],
                undefined,
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "white",
                      "fontSize": 16,
                    },
                    Object {
                      "color": "#ffffff",
                    },
                    Object {
                      "fontSize": 14,
                    },
                    Object {
                      "fontSize": 17,
                    },
                    undefined,
                    Object {
                      "fontWeight": "600",
                    },
                    undefined,
                  ],
                ]
              }
            >
              Allow
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
