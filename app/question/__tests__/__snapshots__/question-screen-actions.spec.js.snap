// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<QuestionActions /> when more than two responses are present match snapshot if in error status 1`] = `
<RCTSafeAreaView
  safeArea={true}
  style={Object {}}
>
  <View
    bg="tertiary"
    row={true}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "space-around",
        "marginVertical": "3%",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
          "marginRight": "3%",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "marginLeft": 15,
              "marginRight": 15,
            },
            undefined,
            Object {
              "marginLeft": 0,
              "marginRight": 0,
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel="question-action-cancel"
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Array [
                Object {
                  "borderRadius": 5,
                  "borderWidth": 1,
                },
                Object {
                  "borderColor": "#A5A5A5",
                },
              ],
            ]
          }
          testID="question-action-cancel"
          tvParallaxProperties={undefined}
        >
          <View
            pointerEvents="box-only"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#9E9E9E",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 19,
                },
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Object {
                  "backgroundColor": "#ffffff",
                },
                undefined,
                Object {
                  "padding": 12,
                },
                undefined,
                undefined,
                undefined,
                Array [
                  null,
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 1,
                  },
                  Object {
                    "borderColor": "#A5A5A5",
                  },
                ],
                undefined,
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "white",
                      "fontSize": 16,
                    },
                    Object {
                      "color": "#777777",
                    },
                    Object {
                      "fontSize": 14,
                    },
                    Object {
                      "fontSize": 17,
                    },
                    undefined,
                    Object {
                      "fontWeight": "bold",
                    },
                    Object {
                      "fontFamily": "Lato",
                    },
                    undefined,
                  ],
                ]
              }
            >
              Cancel
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "marginLeft": 15,
              "marginRight": 15,
            },
            undefined,
            Object {
              "marginLeft": 0,
              "marginRight": 0,
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel="question-action-submit"
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Array [
                Object {
                  "borderRadius": 5,
                  "borderWidth": 1,
                },
                Object {
                  "borderColor": "#01C8A1",
                },
              ],
            ]
          }
          testID="question-action-submit"
          tvParallaxProperties={undefined}
        >
          <View
            pointerEvents="box-only"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#9E9E9E",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 19,
                },
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Object {
                  "backgroundColor": "#01C8A1",
                },
                undefined,
                Object {
                  "padding": 12,
                },
                undefined,
                undefined,
                undefined,
                Array [
                  null,
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 1,
                  },
                  Object {
                    "borderColor": "#01C8A1",
                  },
                ],
                false,
                false,
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "white",
                      "fontSize": 16,
                    },
                    Object {
                      "color": "#ffffff",
                    },
                    Object {
                      "fontSize": 14,
                    },
                    Object {
                      "fontSize": 17,
                    },
                    undefined,
                    Object {
                      "fontWeight": "bold",
                    },
                    Object {
                      "fontFamily": "Lato",
                    },
                    false,
                  ],
                ]
              }
            >
              Try Again
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`<QuestionActions /> when more than two responses are present match snapshot if in success status 1`] = `
<RCTSafeAreaView
  safeArea={true}
  style={Object {}}
>
  <View
    bg="tertiary"
    row={true}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "space-around",
        "marginVertical": "3%",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "marginLeft": 15,
              "marginRight": 15,
            },
            undefined,
            Object {
              "marginLeft": 0,
              "marginRight": 0,
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel="question-action-submit"
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Array [
                Object {
                  "borderRadius": 5,
                  "borderWidth": 1,
                },
                Object {
                  "borderColor": "#01C8A1",
                },
              ],
            ]
          }
          testID="question-action-submit"
          tvParallaxProperties={undefined}
        >
          <View
            pointerEvents="box-only"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#9E9E9E",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 19,
                },
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Object {
                  "backgroundColor": "#01C8A1",
                },
                undefined,
                Object {
                  "padding": 12,
                },
                undefined,
                undefined,
                undefined,
                Array [
                  null,
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 1,
                  },
                  Object {
                    "borderColor": "#01C8A1",
                  },
                ],
                false,
                false,
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "white",
                      "fontSize": 16,
                    },
                    Object {
                      "color": "#ffffff",
                    },
                    Object {
                      "fontSize": 14,
                    },
                    Object {
                      "fontSize": 17,
                    },
                    undefined,
                    Object {
                      "fontWeight": "bold",
                    },
                    Object {
                      "fontFamily": "Lato",
                    },
                    false,
                  ],
                ]
              }
            >
              OK
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`<QuestionActions /> when more than two responses are present render Ignore and Submit button 1`] = `
<RCTSafeAreaView
  safeArea={true}
  style={Object {}}
>
  <View
    bg="tertiary"
    row={true}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "space-around",
        "marginVertical": "3%",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
          "marginRight": "3%",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "marginLeft": 15,
              "marginRight": 15,
            },
            undefined,
            Object {
              "marginLeft": 0,
              "marginRight": 0,
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel="question-action-cancel"
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Array [
                Object {
                  "borderRadius": 5,
                  "borderWidth": 1,
                },
                Object {
                  "borderColor": "#A5A5A5",
                },
              ],
            ]
          }
          testID="question-action-cancel"
          tvParallaxProperties={undefined}
        >
          <View
            pointerEvents="box-only"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#9E9E9E",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 19,
                },
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Object {
                  "backgroundColor": "#ffffff",
                },
                undefined,
                Object {
                  "padding": 12,
                },
                undefined,
                undefined,
                undefined,
                Array [
                  null,
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 1,
                  },
                  Object {
                    "borderColor": "#A5A5A5",
                  },
                ],
                undefined,
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "white",
                      "fontSize": 16,
                    },
                    Object {
                      "color": "#777777",
                    },
                    Object {
                      "fontSize": 14,
                    },
                    Object {
                      "fontSize": 17,
                    },
                    undefined,
                    Object {
                      "fontWeight": "bold",
                    },
                    Object {
                      "fontFamily": "Lato",
                    },
                    undefined,
                  ],
                ]
              }
            >
              Ignore
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "marginLeft": 15,
              "marginRight": 15,
            },
            undefined,
            Object {
              "marginLeft": 0,
              "marginRight": 0,
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel="question-action-submit"
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Array [
                Object {
                  "borderRadius": 5,
                  "borderWidth": 1,
                },
                Object {
                  "borderColor": "#01C8A1",
                },
              ],
            ]
          }
          testID="question-action-submit"
          tvParallaxProperties={undefined}
        >
          <View
            pointerEvents="box-only"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#9E9E9E",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 19,
                },
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Object {
                  "backgroundColor": "#01C8A1",
                },
                undefined,
                Object {
                  "padding": 12,
                },
                undefined,
                undefined,
                undefined,
                Array [
                  null,
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 1,
                  },
                  Object {
                    "borderColor": "#01C8A1",
                  },
                ],
                Object {
                  "backgroundColor": "#dadee0",
                },
                Array [
                  Object {
                    "backgroundColor": "#01C8A1",
                  },
                  Object {
                    "opacity": 0.4,
                  },
                ],
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "white",
                      "fontSize": 16,
                    },
                    Object {
                      "color": "#ffffff",
                    },
                    Object {
                      "fontSize": 14,
                    },
                    Object {
                      "fontSize": 17,
                    },
                    undefined,
                    Object {
                      "fontWeight": "bold",
                    },
                    Object {
                      "fontFamily": "Lato",
                    },
                    undefined,
                  ],
                ]
              }
            >
              Submit
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`<QuestionActions /> when one response is present match snapshot if in error status 1`] = `
<RCTSafeAreaView
  safeArea={true}
  style={Object {}}
>
  <View
    bg="tertiary"
    row={true}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "space-around",
        "marginVertical": "3%",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
          "marginRight": "3%",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "marginLeft": 15,
              "marginRight": 15,
            },
            undefined,
            Object {
              "marginLeft": 0,
              "marginRight": 0,
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel="question-action-cancel"
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Array [
                Object {
                  "borderRadius": 5,
                  "borderWidth": 1,
                },
                Object {
                  "borderColor": "#A5A5A5",
                },
              ],
            ]
          }
          testID="question-action-cancel"
          tvParallaxProperties={undefined}
        >
          <View
            pointerEvents="box-only"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#9E9E9E",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 19,
                },
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Object {
                  "backgroundColor": "#ffffff",
                },
                undefined,
                Object {
                  "padding": 12,
                },
                undefined,
                undefined,
                undefined,
                Array [
                  null,
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 1,
                  },
                  Object {
                    "borderColor": "#A5A5A5",
                  },
                ],
                undefined,
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "white",
                      "fontSize": 16,
                    },
                    Object {
                      "color": "#777777",
                    },
                    Object {
                      "fontSize": 14,
                    },
                    Object {
                      "fontSize": 17,
                    },
                    undefined,
                    Object {
                      "fontWeight": "bold",
                    },
                    Object {
                      "fontFamily": "Lato",
                    },
                    undefined,
                  ],
                ]
              }
            >
              Cancel
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "marginLeft": 15,
              "marginRight": 15,
            },
            undefined,
            Object {
              "marginLeft": 0,
              "marginRight": 0,
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel="question-action-submit"
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Array [
                Object {
                  "borderRadius": 5,
                  "borderWidth": 1,
                },
                Object {
                  "borderColor": "#01C8A1",
                },
              ],
            ]
          }
          testID="question-action-submit"
          tvParallaxProperties={undefined}
        >
          <View
            pointerEvents="box-only"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#9E9E9E",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 19,
                },
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Object {
                  "backgroundColor": "#01C8A1",
                },
                undefined,
                Object {
                  "padding": 12,
                },
                undefined,
                undefined,
                undefined,
                Array [
                  null,
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 1,
                  },
                  Object {
                    "borderColor": "#01C8A1",
                  },
                ],
                false,
                false,
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "white",
                      "fontSize": 16,
                    },
                    Object {
                      "color": "#ffffff",
                    },
                    Object {
                      "fontSize": 14,
                    },
                    Object {
                      "fontSize": 17,
                    },
                    undefined,
                    Object {
                      "fontWeight": "bold",
                    },
                    Object {
                      "fontFamily": "Lato",
                    },
                    false,
                  ],
                ]
              }
            >
              Try Again
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`<QuestionActions /> when one response is present match snapshot if in success status 1`] = `
<RCTSafeAreaView
  safeArea={true}
  style={Object {}}
>
  <View
    bg="tertiary"
    row={true}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "space-around",
        "marginVertical": "3%",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "marginLeft": 15,
              "marginRight": 15,
            },
            undefined,
            Object {
              "marginLeft": 0,
              "marginRight": 0,
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel="question-action-submit"
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Array [
                Object {
                  "borderRadius": 5,
                  "borderWidth": 1,
                },
                Object {
                  "borderColor": "#01C8A1",
                },
              ],
            ]
          }
          testID="question-action-submit"
          tvParallaxProperties={undefined}
        >
          <View
            pointerEvents="box-only"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#9E9E9E",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 19,
                },
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Object {
                  "backgroundColor": "#01C8A1",
                },
                undefined,
                Object {
                  "padding": 12,
                },
                undefined,
                undefined,
                undefined,
                Array [
                  null,
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 1,
                  },
                  Object {
                    "borderColor": "#01C8A1",
                  },
                ],
                false,
                false,
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "white",
                      "fontSize": 16,
                    },
                    Object {
                      "color": "#ffffff",
                    },
                    Object {
                      "fontSize": 14,
                    },
                    Object {
                      "fontSize": 17,
                    },
                    undefined,
                    Object {
                      "fontWeight": "bold",
                    },
                    Object {
                      "fontFamily": "Lato",
                    },
                    false,
                  ],
                ]
              }
            >
              OK
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`<QuestionActions /> when one response is present render Ignore and response button 1`] = `
<RCTSafeAreaView
  safeArea={true}
  style={Object {}}
>
  <View
    bg="tertiary"
    row={true}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "space-around",
        "marginVertical": "3%",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
          "marginRight": "3%",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "marginLeft": 15,
              "marginRight": 15,
            },
            undefined,
            Object {
              "marginLeft": 0,
              "marginRight": 0,
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel="question-action-cancel"
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Array [
                Object {
                  "borderRadius": 5,
                  "borderWidth": 1,
                },
                Object {
                  "borderColor": "#A5A5A5",
                },
              ],
            ]
          }
          testID="question-action-cancel"
          tvParallaxProperties={undefined}
        >
          <View
            pointerEvents="box-only"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#9E9E9E",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 19,
                },
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Object {
                  "backgroundColor": "#ffffff",
                },
                undefined,
                Object {
                  "padding": 12,
                },
                undefined,
                undefined,
                undefined,
                Array [
                  null,
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 1,
                  },
                  Object {
                    "borderColor": "#A5A5A5",
                  },
                ],
                undefined,
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "white",
                      "fontSize": 16,
                    },
                    Object {
                      "color": "#777777",
                    },
                    Object {
                      "fontSize": 14,
                    },
                    Object {
                      "fontSize": 17,
                    },
                    undefined,
                    Object {
                      "fontWeight": "bold",
                    },
                    Object {
                      "fontFamily": "Lato",
                    },
                    undefined,
                  ],
                ]
              }
            >
              Ignore
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={Object {}}
      >
        <View
          style={
            Array [
              Object {
                "marginLeft": 15,
                "marginRight": 15,
              },
              undefined,
              Object {
                "marginLeft": 0,
                "marginRight": 0,
              },
              undefined,
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel="akdfakjfkjdaadkgak-submit"
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                Array [
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 1,
                  },
                  Object {
                    "borderColor": "#01C8A1",
                  },
                ],
              ]
            }
            testID="akdfakjfkjdaadkgak-submit"
            tvParallaxProperties={undefined}
          >
            <View
              pointerEvents="box-only"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#9E9E9E",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "padding": 19,
                  },
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Object {
                    "backgroundColor": "#01C8A1",
                  },
                  undefined,
                  Object {
                    "padding": 12,
                  },
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    null,
                    Object {
                      "borderRadius": 5,
                      "borderWidth": 1,
                    },
                    Object {
                      "borderColor": "#01C8A1",
                    },
                  ],
                  undefined,
                  undefined,
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {},
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    Array [
                      Object {
                        "color": "white",
                        "fontSize": 16,
                      },
                      Object {
                        "color": "#ffffff",
                      },
                      Object {
                        "fontSize": 14,
                      },
                      Object {
                        "fontSize": 17,
                      },
                      undefined,
                      Object {
                        "fontWeight": "bold",
                      },
                      Object {
                        "fontFamily": "Lato",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Yes
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`<QuestionActions /> when two responses are present match snapshot if in error status 1`] = `
<RCTSafeAreaView
  safeArea={true}
  style={Object {}}
>
  <View
    bg="tertiary"
    row={true}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "space-around",
        "marginVertical": "3%",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
          "marginRight": "3%",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "marginLeft": 15,
              "marginRight": 15,
            },
            undefined,
            Object {
              "marginLeft": 0,
              "marginRight": 0,
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel="question-action-cancel"
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Array [
                Object {
                  "borderRadius": 5,
                  "borderWidth": 1,
                },
                Object {
                  "borderColor": "#A5A5A5",
                },
              ],
            ]
          }
          testID="question-action-cancel"
          tvParallaxProperties={undefined}
        >
          <View
            pointerEvents="box-only"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#9E9E9E",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 19,
                },
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Object {
                  "backgroundColor": "#ffffff",
                },
                undefined,
                Object {
                  "padding": 12,
                },
                undefined,
                undefined,
                undefined,
                Array [
                  null,
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 1,
                  },
                  Object {
                    "borderColor": "#A5A5A5",
                  },
                ],
                undefined,
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "white",
                      "fontSize": 16,
                    },
                    Object {
                      "color": "#777777",
                    },
                    Object {
                      "fontSize": 14,
                    },
                    Object {
                      "fontSize": 17,
                    },
                    undefined,
                    Object {
                      "fontWeight": "bold",
                    },
                    Object {
                      "fontFamily": "Lato",
                    },
                    undefined,
                  ],
                ]
              }
            >
              Cancel
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "marginLeft": 15,
              "marginRight": 15,
            },
            undefined,
            Object {
              "marginLeft": 0,
              "marginRight": 0,
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel="question-action-submit"
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Array [
                Object {
                  "borderRadius": 5,
                  "borderWidth": 1,
                },
                Object {
                  "borderColor": "#01C8A1",
                },
              ],
            ]
          }
          testID="question-action-submit"
          tvParallaxProperties={undefined}
        >
          <View
            pointerEvents="box-only"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#9E9E9E",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 19,
                },
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Object {
                  "backgroundColor": "#01C8A1",
                },
                undefined,
                Object {
                  "padding": 12,
                },
                undefined,
                undefined,
                undefined,
                Array [
                  null,
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 1,
                  },
                  Object {
                    "borderColor": "#01C8A1",
                  },
                ],
                false,
                false,
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "white",
                      "fontSize": 16,
                    },
                    Object {
                      "color": "#ffffff",
                    },
                    Object {
                      "fontSize": 14,
                    },
                    Object {
                      "fontSize": 17,
                    },
                    undefined,
                    Object {
                      "fontWeight": "bold",
                    },
                    Object {
                      "fontFamily": "Lato",
                    },
                    false,
                  ],
                ]
              }
            >
              Try Again
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`<QuestionActions /> when two responses are present match snapshot if in success status 1`] = `
<RCTSafeAreaView
  safeArea={true}
  style={Object {}}
>
  <View
    bg="tertiary"
    row={true}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "space-around",
        "marginVertical": "3%",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "marginLeft": 15,
              "marginRight": 15,
            },
            undefined,
            Object {
              "marginLeft": 0,
              "marginRight": 0,
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel="question-action-submit"
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Array [
                Object {
                  "borderRadius": 5,
                  "borderWidth": 1,
                },
                Object {
                  "borderColor": "#01C8A1",
                },
              ],
            ]
          }
          testID="question-action-submit"
          tvParallaxProperties={undefined}
        >
          <View
            pointerEvents="box-only"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#9E9E9E",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 19,
                },
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Object {
                  "backgroundColor": "#01C8A1",
                },
                undefined,
                Object {
                  "padding": 12,
                },
                undefined,
                undefined,
                undefined,
                Array [
                  null,
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 1,
                  },
                  Object {
                    "borderColor": "#01C8A1",
                  },
                ],
                false,
                false,
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "white",
                      "fontSize": 16,
                    },
                    Object {
                      "color": "#ffffff",
                    },
                    Object {
                      "fontSize": 14,
                    },
                    Object {
                      "fontSize": 17,
                    },
                    undefined,
                    Object {
                      "fontWeight": "bold",
                    },
                    Object {
                      "fontFamily": "Lato",
                    },
                    false,
                  ],
                ]
              }
            >
              OK
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`<QuestionActions /> when two responses are present render both response buttons and no ignore button 1`] = `
<RCTSafeAreaView
  safeArea={true}
  style={Object {}}
>
  <View
    bg="tertiary"
    row={true}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "space-around",
        "marginVertical": "3%",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Object {
            "marginTop": 10,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "marginLeft": 15,
                "marginRight": 15,
              },
              undefined,
              Object {
                "marginLeft": 0,
                "marginRight": 0,
              },
              undefined,
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel="hyjjjjuifhjkiutyojoh-submit"
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                Array [
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 1,
                  },
                  Object {
                    "borderColor": "#A5A5A5",
                  },
                ],
              ]
            }
            testID="hyjjjjuifhjkiutyojoh-submit"
            tvParallaxProperties={undefined}
          >
            <View
              pointerEvents="box-only"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#9E9E9E",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "padding": 19,
                  },
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Object {
                    "backgroundColor": "#ffffff",
                  },
                  undefined,
                  Object {
                    "padding": 12,
                  },
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    null,
                    Object {
                      "borderRadius": 5,
                      "borderWidth": 1,
                    },
                    Object {
                      "borderColor": "#A5A5A5",
                    },
                  ],
                  undefined,
                  undefined,
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {},
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    Array [
                      Object {
                        "color": "white",
                        "fontSize": 16,
                      },
                      Object {
                        "color": "#777777",
                      },
                      Object {
                        "fontSize": 14,
                      },
                      Object {
                        "fontSize": 17,
                      },
                      undefined,
                      Object {
                        "fontWeight": "bold",
                      },
                      Object {
                        "fontFamily": "Lato",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Answer 2
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "marginTop": 10,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "marginLeft": 15,
                "marginRight": 15,
              },
              undefined,
              Object {
                "marginLeft": 0,
                "marginRight": 0,
              },
              undefined,
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel="akdfakjfkjdaadkgak-submit"
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                Array [
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 1,
                  },
                  Object {
                    "borderColor": "#01C8A1",
                  },
                ],
              ]
            }
            testID="akdfakjfkjdaadkgak-submit"
            tvParallaxProperties={undefined}
          >
            <View
              pointerEvents="box-only"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#9E9E9E",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "padding": 19,
                  },
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Object {
                    "backgroundColor": "#01C8A1",
                  },
                  undefined,
                  Object {
                    "padding": 12,
                  },
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    null,
                    Object {
                      "borderRadius": 5,
                      "borderWidth": 1,
                    },
                    Object {
                      "borderColor": "#01C8A1",
                    },
                  ],
                  undefined,
                  undefined,
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {},
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    Array [
                      Object {
                        "color": "white",
                        "fontSize": 16,
                      },
                      Object {
                        "color": "#ffffff",
                      },
                      Object {
                        "fontSize": 14,
                      },
                      Object {
                        "fontSize": 17,
                      },
                      undefined,
                      Object {
                        "fontWeight": "bold",
                      },
                      Object {
                        "fontFamily": "Lato",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Answer 1
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;
