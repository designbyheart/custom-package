// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ClaimOfferModal /> should ClaimOfferModal render properly 1`] = `
<View
  collapsable={undefined}
  style={
    Object {
      "backgroundColor": "rgba(0,0,0,0.7)",
      "elevation": 20,
      "height": 540,
      "opacity": 0,
      "position": "absolute",
      "transform": Array [
        Object {
          "translateY": 540,
        },
      ],
      "width": 320,
      "zIndex": 999,
    }
  }
>
  <View
    collapsable={undefined}
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
        "transform": Array [
          Object {
            "translateY": 540,
          },
        ],
        "width": "100%",
      }
    }
  >
    <RCTScrollView
      bounces={false}
      onScrollEndDrag={[Function]}
      scrollEventThrottle={15}
    >
      <View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "height": 81,
              "justifyContent": "flex-end",
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Object {
                "alignSelf": "center",
                "backgroundColor": "white",
                "borderRadius": 3,
                "height": 6,
                "marginBottom": 7,
                "width": "15%",
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 10,
              "flex": 1,
              "height": 459,
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "elevation": 0,
                "flexDirection": "column",
                "padding": 17,
                "position": "relative",
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 0,
                  "width": 0,
                },
                "shadowOpacity": 0.1,
                "shadowRadius": 14,
                "width": "100%",
                "zIndex": 200,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "stretch",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "width": "100%",
                  },
                  Object {
                    "paddingBottom": 15,
                  },
                ]
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "flexDirection": "column",
                    "justifyContent": "center",
                    "width": 45,
                  }
                }
              >
                <Image
                  resizeMode="cover"
                  source={
                    Object {
                      "uri": "",
                    }
                  }
                  style={
                    Object {
                      "height": 32,
                      "width": 32,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "flex": 1,
                    "flexDirection": "column",
                    "justifyContent": "center",
                  }
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#505050",
                      "fontFamily": "Lato",
                      "fontSize": 17,
                      "fontWeight": "700",
                    }
                  }
                >
                  issuername
                </Text>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#777",
                      "fontFamily": "Lato",
                      "fontSize": 14,
                      "fontWeight": "400",
                    }
                  }
                >
                  is offering to issue you
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-end",
                    "backgroundColor": "white",
                    "flexDirection": "column",
                    "justifyContent": "center",
                    "width": 45,
                  }
                }
              >
                <RNSVGSvgView
                  bbHeight="34.5"
                  bbWidth="23"
                  color="rgba(119, 119, 119, 1.0)"
                  fill="none"
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                      },
                      undefined,
                      false,
                      Object {
                        "flex": 0,
                        "height": 34.5,
                        "width": 23,
                      },
                    ]
                  }
                >
                  <RNSVGPath
                    d="M6.875 21.2v7.285l4.095-3.273 4.155 3.273V21.2c-1.274.516-2.666.8-4.125.8s-2.851-.284-4.125-.8zm-2.75-1.613A10.98 10.98 0 0 1 0 11C0 4.925 4.925 0 11 0s11 4.925 11 11c0 3.5-1.635 6.62-4.184 8.634v12.893l-6.845-4.096-6.846 4.096v-12.94zM11 19.25a8.25 8.25 0 1 0 0-16.5 8.25 8.25 0 0 0 0 16.5zm5.214-11.408c.03.056.045.098.045.126 0 .028-.015.07-.045.126l-5.617 6.726c-.09.084-.158.126-.203.126-.075 0-.15-.035-.225-.105l-3.181-2.859-.068-.063a.308.308 0 0 1-.045-.126c0-.014.015-.049.045-.105l.045-.042c.421-.42.752-.743.993-.967.09-.084.15-.126.18-.126.06 0 .136.042.226.126l1.805 1.64 4.511-5.402c.03-.028.075-.042.136-.042.045 0 .097.014.158.042l1.24.925z"
                    fill={
                      Array [
                        0,
                        0.4666666666666667,
                        0.4666666666666667,
                        0.4666666666666667,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    onLayout={undefined}
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                </RNSVGSvgView>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "stretch",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "flex": 1,
                    "flexDirection": "column",
                    "justifyContent": "center",
                  }
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#505050",
                      "fontFamily": "Lato",
                      "fontSize": 22,
                      "fontWeight": "400",
                    }
                  }
                >
                  dataname
                </Text>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "flex": 1,
                "width": "100%",
              }
            }
          >
            <RCTScrollView
              style={
                Object {
                  "backgroundColor": "#f2f2f2",
                  "flex": 1,
                }
              }
            >
              <View />
            </RCTScrollView>
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#f2f2f2",
                "padding": 15,
                "paddingBottom": 45,
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "stretch",
                  "borderRadius": 5,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "overflow": "hidden",
                }
              }
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                hasTVPreferredFocus={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "rgba(119, 119, 119, 0.6)",
                    "justifyContent": "center",
                    "opacity": 1,
                    "padding": 17.5,
                    "paddingLeft": 30,
                    "paddingRight": 30,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#fff",
                      "fontFamily": "Lato",
                      "fontSize": 17,
                      "fontWeight": "700",
                    }
                  }
                >
                  Ignore
                </Text>
              </View>
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                hasTVPreferredFocus={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "rgba(119, 119, 119, 1.0)",
                    "flex": 1,
                    "justifyContent": "center",
                    "opacity": 1,
                    "padding": 17.5,
                    "paddingLeft": 30,
                    "paddingRight": 30,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <View
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Object {
                        "color": "#fff",
                        "fontFamily": "Lato",
                        "fontSize": 17,
                        "fontWeight": "700",
                      }
                    }
                  >
                    Accept
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;
