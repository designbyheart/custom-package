// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DashboardScreen /> should render Home and redirect user to claim offer modal 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "height": "100%",
      "width": "100%",
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "paddingBottom": 170,
      }
    }
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "backgroundColor": "#fff",
        "height": "100%",
        "paddingTop": 120,
        "width": "100%",
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
</View>
`;

exports[`<DashboardScreen /> should render Home and show introductory text 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "height": "100%",
      "width": "100%",
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "paddingBottom": 170,
      }
    }
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "backgroundColor": "#fff",
        "height": "100%",
        "paddingTop": 120,
        "width": "100%",
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
</View>
`;

exports[`<DashboardScreen /> should render Home and show loader 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "height": "100%",
      "width": "100%",
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "paddingBottom": 170,
      }
    }
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "backgroundColor": "#fff",
        "height": "100%",
        "paddingTop": 120,
        "width": "100%",
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
</View>
`;
