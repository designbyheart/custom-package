// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LockSetupSuccess /> should display Loading while fetching the invitation 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  safeArea={true}
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
  tertiary={true}
>
  <View
    center={true}
    clearBg={true}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "flex": 1,
        "justifyContent": "center",
        "paddingHorizontal": 20,
      }
    }
  >
    <View
      accessibilityLabel="lock-success-lock-logo"
      accessible={true}
      clearBg={true}
      extraLarge={true}
      resizeMode="cover"
      src={
        Object {
          "default": "RelativeImageStub",
        }
      }
      style={
        Object {
          "backgroundColor": "transparent",
        }
      }
      testID="lock-success-lock-logo"
    >
      <View
        style={Object {}}
      >
        <Image
          accessibilityLabel="lock-success-lock-logo"
          accessible={true}
          resizeMode="cover"
          source={
            Object {
              "default": "RelativeImageStub",
            }
          }
          style={
            Array [
              Object {
                "height": 80,
                "width": 80,
              },
              null,
            ]
          }
          testID="lock-success-lock-logo"
        />
      </View>
    </View>
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "fontSize": 19,
          },
          Object {
            "fontFamily": "Lato",
          },
          Object {
            "backgroundColor": "#ffffff",
            "color": "#777777",
          },
          Object {
            "fontWeight": "800",
          },
          Object {
            "textAlign": "center",
          },
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          Object {
            "paddingVertical": 40,
          },
        ]
      }
    >
      Loading please wait...
    </Text>
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "fontSize": 15,
          },
          Object {
            "fontFamily": "Lato",
          },
          Object {
            "backgroundColor": "#ffffff",
            "color": "#777777",
          },
          Object {
            "fontWeight": "800",
          },
          Object {
            "textAlign": "center",
          },
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          Object {
            "paddingVertical": 40,
          },
        ]
      }
    >
       
    </Text>
  </View>
  <View
    style={
      Object {
        "marginHorizontal": "2%",
      }
    }
  >
    <View
      style={
        Object {
          "borderRadius": 3,
          "marginLeft": 0,
          "marginRight": 0,
          "overflow": "hidden",
        }
      }
    >
      <View
        accessibilityLabel="close-button"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "busy": false,
            "disabled": true,
          }
        }
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="close-button"
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#ffffff",
              "borderColor": "#2089dc",
              "borderRadius": 3,
              "borderWidth": 0,
              "color": "#ffffff",
              "flexDirection": "row",
              "justifyContent": "center",
              "opacity": 0.4,
              "padding": 8,
              "paddingVertical": 17,
              "textAlign": "center",
            }
          }
        >
          <Text
            style={
              Object {
                "color": Object {
                  "color": Array [
                    208,
                    8,
                    63,
                  ],
                  "model": "hsl",
                  "valpha": 1,
                },
                "fontSize": 18,
                "paddingBottom": 1,
                "paddingTop": 2,
                "textAlign": "center",
              }
            }
          >
            Close
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`<LockSetupSuccess /> should render Lock setup success Screen 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  safeArea={true}
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
  tertiary={true}
>
  <View
    center={true}
    clearBg={true}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "flex": 1,
        "justifyContent": "center",
        "paddingHorizontal": 20,
      }
    }
  >
    <View
      accessibilityLabel="lock-success-lock-logo"
      accessible={true}
      clearBg={true}
      extraLarge={true}
      resizeMode="cover"
      src={
        Object {
          "default": "RelativeImageStub",
        }
      }
      style={
        Object {
          "backgroundColor": "transparent",
        }
      }
      testID="lock-success-lock-logo"
    >
      <View
        style={Object {}}
      >
        <Image
          accessibilityLabel="lock-success-lock-logo"
          accessible={true}
          resizeMode="cover"
          source={
            Object {
              "default": "RelativeImageStub",
            }
          }
          style={
            Array [
              Object {
                "height": 80,
                "width": 80,
              },
              null,
            ]
          }
          testID="lock-success-lock-logo"
        />
      </View>
    </View>
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "fontSize": 19,
          },
          Object {
            "fontFamily": "Lato",
          },
          Object {
            "backgroundColor": "#ffffff",
            "color": "#777777",
          },
          Object {
            "fontWeight": "800",
          },
          Object {
            "textAlign": "center",
          },
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          Object {
            "paddingVertical": 40,
          },
        ]
      }
    >
      Your connect.me app is now secured
    </Text>
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "fontSize": 15,
          },
          Object {
            "fontFamily": "Lato",
          },
          Object {
            "backgroundColor": "#ffffff",
            "color": "#777777",
          },
          Object {
            "fontWeight": "800",
          },
          Object {
            "textAlign": "center",
          },
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          Object {
            "paddingVertical": 40,
          },
        ]
      }
    >
       
    </Text>
  </View>
  <View
    style={
      Object {
        "marginHorizontal": "2%",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#fff",
          "borderRadius": 3,
          "marginLeft": 0,
          "marginRight": 0,
          "overflow": "hidden",
          "shadowColor": "rgba(0,0,0, .4)",
          "shadowOffset": Object {
            "height": 1,
            "width": 1,
          },
          "shadowOpacity": 1,
          "shadowRadius": 1,
        }
      }
    >
      <View
        accessibilityLabel="close-button"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "busy": false,
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="close-button"
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#777777",
              "borderColor": "#2089dc",
              "borderRadius": 3,
              "borderWidth": 0,
              "color": "#ffffff",
              "flexDirection": "row",
              "justifyContent": "center",
              "padding": 8,
              "paddingVertical": 17,
              "textAlign": "center",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "white",
                "fontSize": 18,
                "paddingBottom": 1,
                "paddingTop": 2,
                "textAlign": "center",
              }
            }
          >
            Close
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;
