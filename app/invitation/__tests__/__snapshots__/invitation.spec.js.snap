// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Invitation /> should match snapshot 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      fifth={true}
      style={
        Object {
          "backgroundColor": "#ffffff",
          "flex": 1,
        }
      }
    >
      <View
        accessibilityLabel="invitation-text-container"
        accessible={true}
        hCenter={true}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
          }
        }
        testID="invitation-text-container"
        useNativeDriver={true}
      >
        <View
          accessibilityLabel="invitation-text-message-container"
          accessible={true}
          style={
            Object {
              "flex": 1,
              "justifyContent": "flex-end",
            }
          }
          testID="invitation-text-message-container"
        >
          <Animatable.View
            accessibilityLabel="invitation-text-container-animation"
            accessible={true}
            animation="bounceInDown"
            delay={100}
            duration={1500}
            testID="invitation-text-container-animation"
          >
            <View
              accessibilityLabel="invitation-text-container-message-title"
              accessible={true}
              center={true}
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                }
              }
              testID="invitation-text-container-message-title"
            >
              <Text
                accessibilityLabel="invitation-text-container-title"
                accessible={true}
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "fontSize": 20,
                    },
                    Object {
                      "fontFamily": "Lato",
                    },
                    Object {
                      "backgroundColor": "#ffffff",
                      "color": "#777777",
                    },
                    Object {
                      "fontWeight": "800",
                    },
                    Object {
                      "textAlign": "center",
                    },
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    Object {
                      "lineHeight": 30,
                      "marginHorizontal": 30,
                      "marginVertical": 10,
                    },
                  ]
                }
                testID="invitation-text-container-title"
              >
                Hi target name
              </Text>
              <Text
                accessibilityLabel="invitation-text-container-message"
                accessible={true}
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "fontSize": 17,
                    },
                    Object {
                      "fontFamily": "Lato",
                    },
                    Object {
                      "backgroundColor": "#ffffff",
                      "color": "#777777",
                    },
                    Object {
                      "fontWeight": "bold",
                    },
                    Object {
                      "textAlign": "center",
                    },
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    Object {
                      "margin": 10,
                    },
                  ]
                }
                testID="invitation-text-container-message"
              >
                sender1 wants to connect with you.
              </Text>
            </View>
          </Animatable.View>
        </View>
        <View
          accessibilityLabel="invitation-text-container-avatars"
          accessible={true}
          style={
            Object {
              "flex": 1,
            }
          }
          testID="invitation-text-container-avatars"
        >
          <Animatable.View
            accessibilityLabel="invitation-text-container-avatars-animation"
            accessible={true}
            animation="bounceInUp"
            delay={300}
            duration={1500}
            testID="invitation-text-container-avatars-animation"
          >
            <View
              center={true}
              spaceBetween={true}
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityLabel="invitation-text-avatars-container"
                accessible={true}
                row={true}
                spaceBetween={true}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "marginVertical": 40,
                  }
                }
                testID="invitation-text-avatars-container"
                vCenter={true}
              >
                <View
                  accessible={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                >
                  <View
                    accessibilityLabel="invitation-text-avatars-invitee"
                    accessible={true}
                    imageShadow="imageShadow"
                    style={
                      Object {
                        "borderRadius": 38,
                        "elevation": 3,
                        "shadowColor": "rgba(0, 0, 0, 0.25)",
                        "shadowOffset": Object {
                          "height": 3,
                          "width": 0,
                        },
                        "shadowOpacity": 1,
                        "shadowRadius": 8,
                      }
                    }
                    testID="invitation-text-avatars-invitee"
                  >
                    <Image
                      accessible={true}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      source={1}
                      style={
                        Array [
                          Object {
                            "height": 76,
                            "width": 76,
                          },
                          Object {
                            "borderRadius": 38,
                          },
                        ]
                      }
                    />
                  </View>
                </View>
                <Image
                  source={1}
                  style={
                    Object {
                      "height": 8,
                      "marginHorizontal": 5,
                      "width": 60,
                    }
                  }
                />
                <View
                  accessibilityLabel="invitation-text-avatars-inviter"
                  accessible={true}
                  imageShadow="imageShadow"
                  style={
                    Object {
                      "borderRadius": 38,
                      "elevation": 3,
                      "shadowColor": "rgba(0, 0, 0, 0.25)",
                      "shadowOffset": Object {
                        "height": 3,
                        "width": 0,
                      },
                      "shadowOpacity": 1,
                      "shadowRadius": 8,
                    }
                  }
                  testID="invitation-text-avatars-inviter"
                >
                  <Image
                    accessible={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    source={
                      Object {
                        "uri": "lu",
                      }
                    }
                    style={
                      Array [
                        Object {
                          "height": 76,
                          "width": 76,
                        },
                        Object {
                          "borderRadius": 38,
                        },
                      ]
                    }
                  />
                </View>
              </View>
            </View>
          </Animatable.View>
        </View>
      </View>
    </View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": "rgba(119, 119, 119, 1.0)",
        }
      }
    >
      <View
        fifth={true}
        style={
          Object {
            "backgroundColor": "#ffffff",
          }
        }
      >
        <View
          style={Object {}}
        >
          <View
            customColor={
              Object {
                "backgroundColor": "rgba(119, 119, 119, 1.0)",
              }
            }
            row={true}
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                style={Object {}}
              >
                <View
                  style={
                    Array [
                      Object {
                        "marginLeft": 15,
                        "marginRight": 15,
                      },
                      undefined,
                      Object {
                        "marginLeft": 0,
                        "marginRight": 0,
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    accessibilityLabel="invitation-deny"
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={null}
                    testID="invitation-deny"
                  >
                    <View
                      pointerEvents="box-only"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#9E9E9E",
                            "flexDirection": "row",
                            "justifyContent": "center",
                            "padding": 19,
                          },
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          Object {
                            "backgroundColor": "rgba(119, 119, 119, 1.0)",
                          },
                          undefined,
                          Object {
                            "padding": 12,
                          },
                          undefined,
                          undefined,
                          undefined,
                          Array [
                            Object {
                              "paddingVertical": 17,
                            },
                          ],
                          false,
                          false,
                        ]
                      }
                    >
                      <Text
                        style={
                          Array [
                            Object {},
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            Array [
                              Object {
                                "color": "white",
                                "fontSize": 16,
                              },
                              Object {
                                "color": "#ffffff",
                              },
                              Object {
                                "fontSize": 14,
                              },
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              false,
                            ],
                          ]
                        }
                      >
                        Deny
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                style={Object {}}
              >
                <View
                  style={
                    Array [
                      Object {
                        "marginLeft": 15,
                        "marginRight": 15,
                      },
                      undefined,
                      Object {
                        "marginLeft": 0,
                        "marginRight": 0,
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    accessibilityLabel="invitation-accept"
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Array [
                        Object {
                          "borderLeftColor": "#ffffff",
                          "borderLeftWidth": 0.4,
                        },
                      ]
                    }
                    testID="invitation-accept"
                  >
                    <View
                      pointerEvents="box-only"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#9E9E9E",
                            "flexDirection": "row",
                            "justifyContent": "center",
                            "padding": 19,
                          },
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          Object {
                            "backgroundColor": "rgba(119, 119, 119, 1.0)",
                          },
                          undefined,
                          Object {
                            "padding": 12,
                          },
                          undefined,
                          undefined,
                          undefined,
                          Array [
                            Object {
                              "paddingVertical": 17,
                            },
                            Object {
                              "borderLeftColor": "#ffffff",
                              "borderLeftWidth": 0.4,
                            },
                          ],
                          false,
                          false,
                        ]
                      }
                    >
                      <Text
                        style={
                          Array [
                            Object {},
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            Array [
                              Object {
                                "color": "white",
                                "fontSize": 16,
                              },
                              Object {
                                "color": "#ffffff",
                              },
                              Object {
                                "fontSize": 14,
                              },
                              undefined,
                              undefined,
                              Object {
                                "fontWeight": "bold",
                              },
                              undefined,
                              false,
                            ],
                          ]
                        }
                      >
                        Connect
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
</View>
`;

exports[`<Invitation /> should return a empty container when invitation is null 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
/>
`;

exports[`<Invitation /> should show "Connecting..." while sending invitation response 1`] = `
<View
  center={true}
  fifth={true}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#ffffff",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    center={true}
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
        "padding": 20,
      }
    }
  >
    <Image
      source={1}
      style={
        Object {
          "height": 30,
          "tintColor": "#777777",
          "transform": Array [
            Object {
              "rotate": "0deg",
            },
          ],
          "width": 30,
        }
      }
    />
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "fontSize": 17,
          },
          Object {
            "fontFamily": "Lato",
          },
          Object {
            "backgroundColor": "#333333",
            "color": "#ffffff",
          },
          null,
          Object {
            "textAlign": "center",
          },
          Object {
            "backgroundColor": "transparent",
          },
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          Object {
            "color": "#464646",
          },
          Object {
            "fontSize": 17,
            "fontWeight": "500",
            "letterSpacing": -0.42,
            "lineHeight": 21,
            "marginTop": 20,
          },
        ]
      }
    >
      Connecting...
    </Text>
  </View>
</View>
`;
