// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<MyConnectionsScreen /> should render MyConnections and redirect user to claim offer modal 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Array [
          Object {
            "zIndex": 1,
          },
          false,
        ]
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(224, 224, 224)",
                "flex": 1,
                "shadowColor": "rgb(224, 224, 224)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                MockedScreen
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onOpen={[Function]}
          onTransitionStart={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
                "opacity": 1,
              }
            }
          >
            <View
              enabled={false}
              hitSlop={
                Object {
                  "right": -270,
                }
              }
              maxDeltaY={20}
              minOffsetX={5}
              onHandlerStateChange={[Function]}
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "backgroundColor": "rgb(242, 242, 242)",
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": -1,
                      },
                      "shadowOpacity": 0.3,
                      "shadowRadius": 5,
                      "top": 0,
                      "width": 3,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flex": 1,
                          }
                        }
                      >
                        <View
                          onGestureEvent={[Function]}
                          onHandlerStateChange={[Function]}
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "elevation": 0,
                                "height": 78.62857142857143,
                                "justifyContent": "center",
                                "position": "absolute",
                                "transform": Array [
                                  Object {
                                    "translateY": 50,
                                  },
                                ],
                                "width": "100%",
                                "zIndex": 1000,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#fff",
                                  "borderRadius": 10,
                                  "elevation": 0,
                                  "flexDirection": "row",
                                  "height": "100%",
                                  "shadowOffset": Object {
                                    "height": 2,
                                    "width": 0,
                                  },
                                  "shadowOpacity": 0.2,
                                  "shadowRadius": 10,
                                  "width": 327.1714285714286,
                                }
                              }
                            >
                              <View
                                onPress={[Function]}
                                style={
                                  Object {
                                    "borderRadius": 10,
                                    "flexDirection": "row",
                                    "height": "100%",
                                    "width": "100%",
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "height": "100%",
                                      "paddingTop": 16,
                                      "width": 64,
                                    }
                                  }
                                >
                                  <View
                                    accessibilityLabel="in-app-notification-card"
                                    accessible={true}
                                    imageShadow={null}
                                    style={
                                      Object {
                                        "borderRadius": 50,
                                      }
                                    }
                                    testID="in-app-notification-card"
                                  >
                                    <Image
                                      accessibilityLabel="in-app-notification-card-image"
                                      accessible={true}
                                      focusable={true}
                                      onClick={[Function]}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      source={
                                        Object {
                                          "uri": "https://localhost/image.png",
                                        }
                                      }
                                      style={
                                        Array [
                                          Object {
                                            "height": 32,
                                            "width": 32,
                                          },
                                          Object {
                                            "borderRadius": 16,
                                          },
                                        ]
                                      }
                                      testID="in-app-notification-card-image"
                                    />
                                  </View>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      Object {
                                        "flex": 1,
                                        "flexDirection": "row",
                                        "height": "50%",
                                      }
                                    }
                                  >
                                    <View
                                      style={
                                        Object {
                                          "height": "100%",
                                          "justifyContent": "flex-end",
                                          "paddingBottom": 5,
                                          "width": "80%",
                                        }
                                      }
                                    >
                                      <Text
                                        ellipsizeMode="tail"
                                        numberOfLines={1}
                                        style={
                                          Object {
                                            "color": "#505050",
                                            "fontFamily": "Lato",
                                            "fontSize": 11.911764705882351,
                                            "fontWeight": "bold",
                                          }
                                        }
                                      >
                                        Anonymous
                                      </Text>
                                    </View>
                                    <View
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "height": "100%",
                                          "justifyContent": "center",
                                          "width": "20%",
                                        }
                                      }
                                    >
                                      <Text
                                        style={
                                          Object {
                                            "color": "#A5A5A5",
                                            "fontFamily": "Lato",
                                            "fontSize": 7.941176470588235,
                                            "marginBottom": 5,
                                          }
                                        }
                                      >
                                        Now
                                      </Text>
                                    </View>
                                  </View>
                                  <View
                                    style={
                                      Object {
                                        "flex": 1,
                                        "height": "50%",
                                      }
                                    }
                                  >
                                    <View
                                      style={
                                        Object {
                                          "height": "100%",
                                          "width": "96%",
                                        }
                                      }
                                    >
                                      <Text
                                        ellipsizeMode="tail"
                                        numberOfLines={2}
                                        style={
                                          Object {
                                            "color": "#777777",
                                            "fontFamily": "Lato",
                                            "fontSize": 8.735294117647058,
                                          }
                                        }
                                      >
                                        Test wants you to share Address
                                      </Text>
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                        <View
                          accessibilityLabel="my-connections-container"
                          accessible={true}
                          style={
                            Object {
                              "backgroundColor": "#FFFFFF",
                              "height": "100%",
                              "width": "100%",
                            }
                          }
                          testID="my-connections-container"
                        >
                          <RCTScrollView
                            contentContainerStyle={
                              Object {
                                "paddingBottom": 166.35714285714286,
                              }
                            }
                            data={Array []}
                            disableVirtualization={false}
                            getItem={[Function]}
                            getItemCount={[Function]}
                            horizontal={false}
                            initialNumToRender={10}
                            keyExtractor={[Function]}
                            maxToRenderPerBatch={10}
                            numColumns={1}
                            onContentSizeChange={[Function]}
                            onEndReachedThreshold={2}
                            onLayout={[Function]}
                            onMomentumScrollEnd={[Function]}
                            onRefresh={[Function]}
                            onScroll={[Function]}
                            onScrollBeginDrag={[Function]}
                            onScrollEndDrag={[Function]}
                            refreshControl={
                              <RefreshControlMock
                                onRefresh={[Function]}
                                refreshing={false}
                              />
                            }
                            refreshing={false}
                            removeClippedSubviews={false}
                            renderItem={[Function]}
                            scrollEventThrottle={50}
                            stickyHeaderIndices={Array []}
                            style={
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "height": "100%",
                                "marginTop": 71.47058823529412,
                                "width": "100%",
                              }
                            }
                            updateCellsBatchingPeriod={50}
                            viewabilityConfigCallbackPairs={Array []}
                            windowSize={21}
                          >
                            <RCTRefreshControl />
                            <View />
                          </RCTScrollView>
                        </View>
                        <View
                          style={
                            Object {
                              "backgroundColor": "#FFFFFF",
                              "elevation": 0,
                              "flexDirection": "row",
                              "height": 71.47058823529412,
                              "position": "absolute",
                              "shadowColor": "#000000",
                              "shadowOffset": Object {
                                "height": 2,
                                "width": 0,
                              },
                              "shadowOpacity": 0.2,
                              "shadowRadius": 10,
                              "top": 0,
                              "width": "100%",
                              "zIndex": 1,
                            }
                          }
                        >
                          <View
                            accessibilityLabel="burger-menu"
                            accessible={true}
                            style={
                              Object {
                                "alignItems": "flex-end",
                                "flexDirection": "row",
                                "paddingBottom": 9.571428571428571,
                                "width": "15%",
                              }
                            }
                          >
                            <View
                              accessible={true}
                              focusable={true}
                              isTVSelectable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "opacity": 1,
                                }
                              }
                              testID="burger-menu"
                            >
                              <View
                                style={
                                  Object {
                                    "transform": Array [
                                      Object {
                                        "scale": 1,
                                      },
                                    ],
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  align="xMidYMid"
                                  bbHeight={30.628571428571426}
                                  bbWidth={30.628571428571426}
                                  fill="#777777"
                                  focusable={false}
                                  height={30.628571428571426}
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "marginBottom": 1.9142857142857141,
                                        "marginLeft": 14.357142857142858,
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 30,
                                        "width": 30,
                                      },
                                    ]
                                  }
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={30.628571428571426}
                                >
                                  <RNSVGGroup
                                    fill={4286019447}
                                    propList={
                                      Array [
                                        "fill",
                                      ]
                                    }
                                  >
                                    <RNSVGGroup>
                                      <RNSVGGroup>
                                        <RNSVGRect
                                          height="24"
                                          matrix={
                                            Array [
                                              -1,
                                              1.2246467991473532e-16,
                                              -1.2246467991473532e-16,
                                              -1,
                                              24,
                                              24,
                                            ]
                                          }
                                          opacity={0}
                                          width="24"
                                          x={0}
                                          y={0}
                                        />
                                        <RNSVGRect
                                          height="2"
                                          rx=".95"
                                          ry=".95"
                                          width="18"
                                          x="3"
                                          y="11"
                                        />
                                        <RNSVGRect
                                          height="2"
                                          rx=".95"
                                          ry=".95"
                                          width="18"
                                          x="3"
                                          y="16"
                                        />
                                        <RNSVGRect
                                          height="2"
                                          rx=".95"
                                          ry=".95"
                                          width="18"
                                          x="3"
                                          y="6"
                                        />
                                      </RNSVGGroup>
                                    </RNSVGGroup>
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                            </View>
                          </View>
                          <View
                            style={
                              Object {
                                "alignItems": "flex-end",
                                "flexDirection": "row",
                                "justifyContent": "center",
                                "paddingBottom": 14.357142857142858,
                                "width": "85%",
                              }
                            }
                          >
                            <Text
                              style={
                                Object {
                                  "color": "#777777",
                                  "fontFamily": "Lato",
                                  "fontSize": 21.057142857142857,
                                  "fontWeight": "bold",
                                  "marginLeft": -47.85714285714286,
                                }
                              }
                            >
                              My Connections
                            </Text>
                          </View>
                        </View>
                        <View
                          accessible={true}
                          focusable={true}
                          isTVSelectable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "#FFFFFF",
                              "borderRadius": 30,
                              "bottom": 20,
                              "elevation": 0,
                              "height": 31.199999999999996,
                              "justifyContent": "center",
                              "opacity": 1,
                              "position": "absolute",
                              "right": 20,
                              "shadowColor": "#000000",
                              "shadowOffset": Object {
                                "height": 2,
                                "width": 0,
                              },
                              "shadowOpacity": 0.5,
                              "shadowRadius": 5,
                              "width": 31.199999999999996,
                              "zIndex": 1000,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "transform": Array [
                                  Object {
                                    "scale": 1,
                                  },
                                ],
                              }
                            }
                          >
                            <RNSVGSvgView
                              align="xMidYMid"
                              bbHeight={21.057142857142857}
                              bbWidth={21.057142857142857}
                              fill="#777777"
                              focusable={false}
                              height={21.057142857142857}
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  Object {
                                    "flex": 0,
                                    "height": 21,
                                    "width": 21,
                                  },
                                ]
                              }
                              vbHeight={24}
                              vbWidth={24}
                              width={21.057142857142857}
                            >
                              <RNSVGGroup
                                fill={4286019447}
                                propList={
                                  Array [
                                    "fill",
                                  ]
                                }
                              >
                                <RNSVGGroup>
                                  <RNSVGGroup>
                                    <RNSVGRect
                                      height="24"
                                      opacity={0}
                                      width="24"
                                      x={0}
                                      y={0}
                                    />
                                    <RNSVGPath
                                      d="M19 7h-3V5.5A2.5 2.5 0 0 0 13.5 3h-3A2.5 2.5 0 0 0 8 5.5V7H5a3 3 0 0 0-3 3v8a3 3 0 0 0 3 3h14a3 3 0 0 0 3-3v-8a3 3 0 0 0-3-3zm-9-1.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5V7h-4zM20 18a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-8a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1z"
                                    />
                                    <RNSVGPath
                                      d="M12 10.5a3.5 3.5 0 1 0 3.5 3.5 3.5 3.5 0 0 0-3.5-3.5zm0 5a1.5 1.5 0 1 1 1.5-1.5 1.5 1.5 0 0 1-1.5 1.5z"
                                    />
                                  </RNSVGGroup>
                                </RNSVGGroup>
                              </RNSVGGroup>
                            </RNSVGSvgView>
                          </View>
                          <Text
                            style={
                              Object {
                                "color": "#777777",
                                "fontFamily": "Lato",
                                "fontSize": 8.922857142857143,
                              }
                            }
                          >
                            Scan
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`<MyConnectionsScreen /> should render MyConnections and show introductory text 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Array [
          Object {
            "zIndex": 1,
          },
          false,
        ]
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(224, 224, 224)",
                "flex": 1,
                "shadowColor": "rgb(224, 224, 224)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                MockedScreen
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onOpen={[Function]}
          onTransitionStart={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
                "opacity": 1,
              }
            }
          >
            <View
              enabled={false}
              hitSlop={
                Object {
                  "right": -270,
                }
              }
              maxDeltaY={20}
              minOffsetX={5}
              onHandlerStateChange={[Function]}
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "backgroundColor": "rgb(242, 242, 242)",
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": -1,
                      },
                      "shadowOpacity": 0.3,
                      "shadowRadius": 5,
                      "top": 0,
                      "width": 3,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flex": 1,
                          }
                        }
                      >
                        <View
                          onGestureEvent={[Function]}
                          onHandlerStateChange={[Function]}
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "elevation": 0,
                                "height": 78.62857142857143,
                                "justifyContent": "center",
                                "position": "absolute",
                                "transform": Array [
                                  Object {
                                    "translateY": 50,
                                  },
                                ],
                                "width": "100%",
                                "zIndex": 1000,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#fff",
                                  "borderRadius": 10,
                                  "elevation": 0,
                                  "flexDirection": "row",
                                  "height": "100%",
                                  "shadowOffset": Object {
                                    "height": 2,
                                    "width": 0,
                                  },
                                  "shadowOpacity": 0.2,
                                  "shadowRadius": 10,
                                  "width": 327.1714285714286,
                                }
                              }
                            >
                              <View
                                onPress={[Function]}
                                style={
                                  Object {
                                    "borderRadius": 10,
                                    "flexDirection": "row",
                                    "height": "100%",
                                    "width": "100%",
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "height": "100%",
                                      "paddingTop": 16,
                                      "width": 64,
                                    }
                                  }
                                >
                                  <View
                                    accessibilityLabel="in-app-notification-card"
                                    accessible={true}
                                    imageShadow={null}
                                    style={
                                      Object {
                                        "borderRadius": 50,
                                      }
                                    }
                                    testID="in-app-notification-card"
                                  >
                                    <Image
                                      accessibilityLabel="in-app-notification-card-image"
                                      accessible={true}
                                      focusable={true}
                                      onClick={[Function]}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      source={
                                        Object {
                                          "uri": "https://localhost/image.png",
                                        }
                                      }
                                      style={
                                        Array [
                                          Object {
                                            "height": 32,
                                            "width": 32,
                                          },
                                          Object {
                                            "borderRadius": 16,
                                          },
                                        ]
                                      }
                                      testID="in-app-notification-card-image"
                                    />
                                  </View>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      Object {
                                        "flex": 1,
                                        "flexDirection": "row",
                                        "height": "50%",
                                      }
                                    }
                                  >
                                    <View
                                      style={
                                        Object {
                                          "height": "100%",
                                          "justifyContent": "flex-end",
                                          "paddingBottom": 5,
                                          "width": "80%",
                                        }
                                      }
                                    >
                                      <Text
                                        ellipsizeMode="tail"
                                        numberOfLines={1}
                                        style={
                                          Object {
                                            "color": "#505050",
                                            "fontFamily": "Lato",
                                            "fontSize": 11.911764705882351,
                                            "fontWeight": "bold",
                                          }
                                        }
                                      >
                                        Anonymous
                                      </Text>
                                    </View>
                                    <View
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "height": "100%",
                                          "justifyContent": "center",
                                          "width": "20%",
                                        }
                                      }
                                    >
                                      <Text
                                        style={
                                          Object {
                                            "color": "#A5A5A5",
                                            "fontFamily": "Lato",
                                            "fontSize": 7.941176470588235,
                                            "marginBottom": 5,
                                          }
                                        }
                                      >
                                        Now
                                      </Text>
                                    </View>
                                  </View>
                                  <View
                                    style={
                                      Object {
                                        "flex": 1,
                                        "height": "50%",
                                      }
                                    }
                                  >
                                    <View
                                      style={
                                        Object {
                                          "height": "100%",
                                          "width": "96%",
                                        }
                                      }
                                    >
                                      <Text
                                        ellipsizeMode="tail"
                                        numberOfLines={2}
                                        style={
                                          Object {
                                            "color": "#777777",
                                            "fontFamily": "Lato",
                                            "fontSize": 8.735294117647058,
                                          }
                                        }
                                      >
                                        Test wants you to share Address
                                      </Text>
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                        <View
                          accessibilityLabel="my-connections-container"
                          accessible={true}
                          style={
                            Object {
                              "backgroundColor": "#FFFFFF",
                              "height": "100%",
                              "width": "100%",
                            }
                          }
                          testID="my-connections-container"
                        >
                          <RCTScrollView
                            contentContainerStyle={
                              Object {
                                "paddingBottom": 166.35714285714286,
                              }
                            }
                            data={Array []}
                            disableVirtualization={false}
                            getItem={[Function]}
                            getItemCount={[Function]}
                            horizontal={false}
                            initialNumToRender={10}
                            keyExtractor={[Function]}
                            maxToRenderPerBatch={10}
                            numColumns={1}
                            onContentSizeChange={[Function]}
                            onEndReachedThreshold={2}
                            onLayout={[Function]}
                            onMomentumScrollEnd={[Function]}
                            onRefresh={[Function]}
                            onScroll={[Function]}
                            onScrollBeginDrag={[Function]}
                            onScrollEndDrag={[Function]}
                            refreshControl={
                              <RefreshControlMock
                                onRefresh={[Function]}
                                refreshing={false}
                              />
                            }
                            refreshing={false}
                            removeClippedSubviews={false}
                            renderItem={[Function]}
                            scrollEventThrottle={50}
                            stickyHeaderIndices={Array []}
                            style={
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "height": "100%",
                                "marginTop": 71.47058823529412,
                                "width": "100%",
                              }
                            }
                            updateCellsBatchingPeriod={50}
                            viewabilityConfigCallbackPairs={Array []}
                            windowSize={21}
                          >
                            <RCTRefreshControl />
                            <View />
                          </RCTScrollView>
                        </View>
                        <View
                          style={
                            Object {
                              "backgroundColor": "#FFFFFF",
                              "elevation": 0,
                              "flexDirection": "row",
                              "height": 71.47058823529412,
                              "position": "absolute",
                              "shadowColor": "#000000",
                              "shadowOffset": Object {
                                "height": 2,
                                "width": 0,
                              },
                              "shadowOpacity": 0.2,
                              "shadowRadius": 10,
                              "top": 0,
                              "width": "100%",
                              "zIndex": 1,
                            }
                          }
                        >
                          <View
                            accessibilityLabel="burger-menu"
                            accessible={true}
                            style={
                              Object {
                                "alignItems": "flex-end",
                                "flexDirection": "row",
                                "paddingBottom": 9.571428571428571,
                                "width": "15%",
                              }
                            }
                          >
                            <View
                              accessible={true}
                              focusable={true}
                              isTVSelectable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "opacity": 1,
                                }
                              }
                              testID="burger-menu"
                            >
                              <View
                                style={
                                  Object {
                                    "transform": Array [
                                      Object {
                                        "scale": 1,
                                      },
                                    ],
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  align="xMidYMid"
                                  bbHeight={30.628571428571426}
                                  bbWidth={30.628571428571426}
                                  fill="#777777"
                                  focusable={false}
                                  height={30.628571428571426}
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "marginBottom": 1.9142857142857141,
                                        "marginLeft": 14.357142857142858,
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 30,
                                        "width": 30,
                                      },
                                    ]
                                  }
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={30.628571428571426}
                                >
                                  <RNSVGGroup
                                    fill={4286019447}
                                    propList={
                                      Array [
                                        "fill",
                                      ]
                                    }
                                  >
                                    <RNSVGGroup>
                                      <RNSVGGroup>
                                        <RNSVGRect
                                          height="24"
                                          matrix={
                                            Array [
                                              -1,
                                              1.2246467991473532e-16,
                                              -1.2246467991473532e-16,
                                              -1,
                                              24,
                                              24,
                                            ]
                                          }
                                          opacity={0}
                                          width="24"
                                          x={0}
                                          y={0}
                                        />
                                        <RNSVGRect
                                          height="2"
                                          rx=".95"
                                          ry=".95"
                                          width="18"
                                          x="3"
                                          y="11"
                                        />
                                        <RNSVGRect
                                          height="2"
                                          rx=".95"
                                          ry=".95"
                                          width="18"
                                          x="3"
                                          y="16"
                                        />
                                        <RNSVGRect
                                          height="2"
                                          rx=".95"
                                          ry=".95"
                                          width="18"
                                          x="3"
                                          y="6"
                                        />
                                      </RNSVGGroup>
                                    </RNSVGGroup>
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                            </View>
                          </View>
                          <View
                            style={
                              Object {
                                "alignItems": "flex-end",
                                "flexDirection": "row",
                                "justifyContent": "center",
                                "paddingBottom": 14.357142857142858,
                                "width": "85%",
                              }
                            }
                          >
                            <Text
                              style={
                                Object {
                                  "color": "#777777",
                                  "fontFamily": "Lato",
                                  "fontSize": 21.057142857142857,
                                  "fontWeight": "bold",
                                  "marginLeft": -47.85714285714286,
                                }
                              }
                            >
                              My Connections
                            </Text>
                          </View>
                        </View>
                        <View
                          accessible={true}
                          focusable={true}
                          isTVSelectable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "#FFFFFF",
                              "borderRadius": 30,
                              "bottom": 20,
                              "elevation": 0,
                              "height": 31.199999999999996,
                              "justifyContent": "center",
                              "opacity": 1,
                              "position": "absolute",
                              "right": 20,
                              "shadowColor": "#000000",
                              "shadowOffset": Object {
                                "height": 2,
                                "width": 0,
                              },
                              "shadowOpacity": 0.5,
                              "shadowRadius": 5,
                              "width": 31.199999999999996,
                              "zIndex": 1000,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "transform": Array [
                                  Object {
                                    "scale": 1,
                                  },
                                ],
                              }
                            }
                          >
                            <RNSVGSvgView
                              align="xMidYMid"
                              bbHeight={21.057142857142857}
                              bbWidth={21.057142857142857}
                              fill="#777777"
                              focusable={false}
                              height={21.057142857142857}
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  Object {
                                    "flex": 0,
                                    "height": 21,
                                    "width": 21,
                                  },
                                ]
                              }
                              vbHeight={24}
                              vbWidth={24}
                              width={21.057142857142857}
                            >
                              <RNSVGGroup
                                fill={4286019447}
                                propList={
                                  Array [
                                    "fill",
                                  ]
                                }
                              >
                                <RNSVGGroup>
                                  <RNSVGGroup>
                                    <RNSVGRect
                                      height="24"
                                      opacity={0}
                                      width="24"
                                      x={0}
                                      y={0}
                                    />
                                    <RNSVGPath
                                      d="M19 7h-3V5.5A2.5 2.5 0 0 0 13.5 3h-3A2.5 2.5 0 0 0 8 5.5V7H5a3 3 0 0 0-3 3v8a3 3 0 0 0 3 3h14a3 3 0 0 0 3-3v-8a3 3 0 0 0-3-3zm-9-1.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5V7h-4zM20 18a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-8a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1z"
                                    />
                                    <RNSVGPath
                                      d="M12 10.5a3.5 3.5 0 1 0 3.5 3.5 3.5 3.5 0 0 0-3.5-3.5zm0 5a1.5 1.5 0 1 1 1.5-1.5 1.5 1.5 0 0 1-1.5 1.5z"
                                    />
                                  </RNSVGGroup>
                                </RNSVGGroup>
                              </RNSVGGroup>
                            </RNSVGSvgView>
                          </View>
                          <Text
                            style={
                              Object {
                                "color": "#777777",
                                "fontFamily": "Lato",
                                "fontSize": 8.922857142857143,
                              }
                            }
                          >
                            Scan
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
