---
stages:
  - test
  - build

yarn-test:
  stage: test
  tags:
    - macos
    - mojave
    - xcode10-1
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /[[Cc][Ii]\s[Ss][Kk][Ii][Pp]]/
  script:
    - yarn install
    - yarn lint
    - yarn test


### - iOS - ###
.build-ios:
  stage: build
  tags:
    - macos
    - mojave
    - xcode10-1
  artifacts:
    paths:
      - ios/ConnectMe.ipa
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /[[Cc][Ii]\s[Ss][Kk][Ii][Pp]]/
  script:
    - mkdir -p ~/.ssh/
    - ssh-keyscan -4H gitlab.corp.evernym.com > ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - echo "$CALLCENTER_CERTS_DEPLOY_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - echo "$IOSDEV_EVERNYM_RSA_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - chmod 644 ~/.ssh/known_hosts
    - yarn install
    - security -v unlock-keychain -p ${VAGRANT_USER_PASS} ~/Library/Keychains/login.keychain-db
    - git config --global user.name 'Gitlab'
    - git config --global user.email 'it@evernym.com'
    - git remote set-url origin git@gitlab.corp.evernym.com:${CI_PROJECT_PATH}.git
    - cd ios
    - bundle install
    - ${FASTLANE_COMMAND}
  after_script:
    - cat ./ios/react-native-xcode.sh.log

build-ios-merge-request:
  extends: .build-ios
  before_script:
    - export HOCKEYAPP_TOKEN="${HOCKEYAPP_TOKEN_MERGE_REQUEST}"
  variables:
    BUILD_TYPE: 'ConnectMe Dev Build'
    DEVELOPER_DIR: '/Applications/Xcode.app/Contents/Developer/'
    FASTLANE_COMMAND: 'bundle exec fastlane ci --verbose'
  only:
    refs:
      - merge_requests

build-ios-master:
  extends: .build-ios
  # Variable expansion doesn't work in `variables` section. Do it here instead.
  before_script:
    - export HOCKEYAPP_TOKEN="${HOCKEYAPP_TOKEN_MASTER}"
  variables:
    DEVELOPER_DIR: '/Applications/Xcode.app/Contents/Developer/'
    # this gets passed to the anchor
    FASTLANE_COMMAND: 'bundle exec fastlane cd --disable_runner_upgrades --verbose'
  only:
    refs:
      - master@dev/connectme/ConnectMe

build-ios-stage:
  extends: .build-ios
  before_script:
    - export HOCKEYAPP_TOKEN="${HOCKEYAPP_TOKEN_STAGE}"
  variables:
    BUILD_TYPE: 'ConnectMe Stage Build'
    DEVELOPER_DIR: '/Applications/Xcode.app/Contents/Developer/'
    FASTLANE_COMMAND: 'bundle exec fastlane cd --disable_runner_upgrades --verbose'
  only:
    refs:
      - stage@dev/connectme/ConnectMe

build-ios-stable:
  extends: .build-ios
  before_script:
    - export HOCKEYAPP_TOKEN="${HOCKEYAPP_TOKEN_STABLE}"
  variables:
    DEVELOPER_DIR: '/Applications/Xcode.app/Contents/Developer/'
    FASTLANE_COMMAND: 'bundle exec fastlane cd --disable_runner_upgrades --verbose'
  only:
    refs:
      - stable@dev/connectme/ConnectMe

### - Android - ###
.build-android:
  stage: build
  tags:
    - docker
  image: bitriseio/android-ndk-lts
  artifacts:
    paths:
      - android/app/build/outputs/apk/release/app-release.apk
    expire_in: 1 week
  script:
    - mkdir -p $HOME/keystores/
    - echo ${ANDROID_KEYSTORE_B64} | base64 -d > $HOME/keystores/my_keystore.jks
    - yes | sdkmanager --licenses || true
    - yarn
    - gem install fastlane
    - cd android && fastlane alpha

build-android-merge-request:
  extends: .build-android
  only:
    refs:
      - merge_requests

build-android-master:
  extends: .build-android
  only:
    refs:
      - master@dev/connectme/ConnectMe

build-android-stage:
  extends: .build-android
  only:
    refs:
      - stage@dev/connectme/ConnectMe

build-android-stable:
  extends: .build-android
  only:
    refs:
      - stable@dev/connectme/ConnectMe
