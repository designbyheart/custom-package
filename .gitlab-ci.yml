---
stages:
  - test
  - sync
  - build

yarn-test:
  stage: test
  tags:
    - macos
    - mojave
    - xcode10-1
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /[[Cc][Ii]\s[Ss][Kk][Ii][Pp]]/
  script:
    - yarn install
    - yarn lint
    - yarn test

# This stage is temporary until the android builds are converted to run internally
sync:
  stage: sync
  image: gitlab.corp.evernym.com:4567/dev/containers/ssh-git:latest
  tags:
    - docker
  only:
    refs:
      - master@dev/connectme/ConnectMe
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /[[Cc][Ii]\s[Ss][Kk][Ii][Pp]]/
  script:
    - mkdir -p ~/.ssh
    - ssh-keyscan -4H github.com > ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - echo "$GITHUB_DEPLOY_KEY_TEST" | tr -d '\r' | ssh-add - > /dev/null
    - git checkout master && git pull origin master
    - git remote add github git@github.com:evernym/ConnectMe-Synctest.git
    - git push github master

.build:
  stage: build
  tags:
    - macos
    - mojave
    - xcode10-1
  artifacts:
    paths:
      - ios/ConnectMe.ipa
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /[[Cc][Ii]\s[Ss][Kk][Ii][Pp]]/
  script:
    - mkdir -p ~/.ssh/
    - ssh-keyscan -4H gitlab.corp.evernym.com > ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - echo "$CALLCENTER_CERTS_DEPLOY_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - echo "$IOSDEV_EVERNYM_RSA_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - chmod 644 ~/.ssh/known_hosts
    - yarn install
    - security -v unlock-keychain -p ${VAGRANT_USER_PASS} ~/Library/Keychains/login.keychain-db
    - git config --global user.name 'Gitlab'
    - git config --global user.email 'it@evernym.com'
    - git remote set-url origin git@gitlab.corp.evernym.com:${CI_PROJECT_PATH}.git
    - cd ios
    - bundle install
    - ${FASTLANE_COMMAND}

build-merge-request:
  extends: .build
  before_script:
    - export HOCKEYAPP_TOKEN="${HOCKEYAPP_TOKEN_MERGE_REQUEST}"
  variables:
    BUILD_TYPE: 'ConnectMe Dev Build'
    DEVELOPER_DIR: '/Applications/Xcode.app/Contents/Developer/'
    FASTLANE_COMMAND: 'bundle exec fastlane ci --verbose'
  only:
    refs:
      - merge_requests

build-master:
  extends: .build
  # Variable expansion doesn't work in `variables` section. Do it here instead.
  before_script:
    - export HOCKEYAPP_TOKEN="${HOCKEYAPP_TOKEN_MASTER}"
  variables:
    DEVELOPER_DIR: '/Applications/Xcode.app/Contents/Developer/'
    # this gets passed to the anchor
    FASTLANE_COMMAND: 'bundle exec fastlane cd --disable_runner_upgrades --verbose'
  only:
    refs:
      - master@dev/connectme/ConnectMe

build-stage:
  extends: .build
  before_script:
    - export HOCKEYAPP_TOKEN="${HOCKEYAPP_TOKEN_STAGE}"
  variables:
    BUILD_TYPE: 'ConnectMe Stage Build'
    DEVELOPER_DIR: '/Applications/Xcode.app/Contents/Developer/'
    FASTLANE_COMMAND: 'bundle exec fastlane cd --disable_runner_upgrades --verbose'
  only:
    refs:
      - stage@dev/connectme/ConnectMe

build-stable:
  extends: .build
  before_script:
    - export HOCKEYAPP_TOKEN="${HOCKEYAPP_TOKEN_STABLE}"
  variables:
    DEVELOPER_DIR: '/Applications/Xcode.app/Contents/Developer/'
    FASTLANE_COMMAND: 'bundle exec fastlane cd --disable_runner_upgrades --verbose'
  only:
    refs:
      - stable@dev/connectme/ConnectMe
